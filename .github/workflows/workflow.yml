name: Test and Scanning workflow

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Container
        run: docker build . --file Dockerfile -t vuln_app

      - name: Run Container
        run: docker run -p 80:80 -d vuln_app

      - name: Wait for server to start
        run: sleep 5

      - name: Test if container is reachable
        run: curl http://localhost:80

      # Container Scan
      - name: Run Trivy vulnerablility scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'vuln_app'
          format: json
          output: trivy.json

      - name: Upload Output
        uses: actions/upload-artifact@v3
        with:
          name: trivy-output
          path: trivy.json

  # SAST-scanning with bearer
  sast:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Bearer CLI
        uses: bearer/bearer-action@v2
        with:
          format: json
          scanner: sast
          output: sast_bearer.json

      - name: Upload Output
        uses: actions/upload-artifact@v3
        with:
          name: bearer-output
          path: sast_bearer.json

    # sast2


  dast1:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Container
        run: docker build . --file Dockerfile -t vuln_app

      - name: Run Container
        run: docker run -p 80:80 -d vuln_app

      - name: Wait for server to start
        run: sleep 5

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: 'http://localhost:80'
          allow_issue_writing: false

  # DAST 2
  dast2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Container
        run: docker build . --file Dockerfile -t vuln_app

      - name: Run Container
        run: docker run -p 80:80 -d vuln_app

      - name: Wait for server to start
        run: sleep 5

      - name: Run Nuclei Scanner
        uses: projectdiscovery/nuclei-action@main
        with:
          target: http://localhost:80

      - name: Upload Nuclei Output
        uses: actions/upload-artifact@v3
        with:
          name: nuclei-output
          path: nuclei.sarif




#  dependency_scan:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
##      - name: Run Aikido
##        uses: AikidoSec/github-actions-workflow@v1.0.13
##        with:
##          secret-key: ${{ secrets.AIKIDO_TOKEN }}
##          fail-on-timeout: true
##          fail-on-dependency-scan: true
##          fail-on-sast-scan: false
##          fail-on-iac-scan: false
##          minimum-severity: 'HIGH'

  secret_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@v3.81.9
        with:
          extra_args: --json

  evaluate_results:
    needs: [build-test, sast, dast1, dast2, secret_scan]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - run: cd .github/workflows

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: trivy-output
          path: results/trivy.json

      - run: python3 result_validation.py