name: Test and Scanning workflow

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Container
        run: docker build . --file Dockerfile -t vuln_app

      - name: Run Container
        run: docker run -p 80:80 -d vuln_app

      - name: Wait for server to start
        run: sleep 5

      - name: Test if container is reachable
        run: curl http://localhost:80


  # SAST-scanning with bearer
  sast:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Bearer CLI
        uses: bearer/bearer-action@v2
        with:
          format: json
          scanner: sast
          output: bearer.json
        continue-on-error: true

      - name: Upload Output
        uses: actions/upload-artifact@v4
        with:
          name: bearer-output
          path: bearer.json

    # sast2


  dast1:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Container
        run: docker build . --file Dockerfile -t vuln_app

      - name: Run Container
        run: docker run -p 80:80 -d vuln_app

      - name: Wait for server to start
        run: sleep 5

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: 'http://localhost:80'
          allow_issue_writing: false

  # DAST 2
  dast2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Container
        run: docker build . --file Dockerfile -t vuln_app

      - name: Run Container
        run: docker run -p 80:80 -d vuln_app

      - name: Wait for server to start
        run: sleep 5

      - name: Run Nuclei Scanner
        uses: projectdiscovery/nuclei-action@main
        with:
          target: http://localhost:80
        continue-on-error: true

      - name: Upload Nuclei Output
        uses: actions/upload-artifact@v4
        with:
          name: nuclei-output
          path: nuclei.sarif

  dependency_scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          json: true
        continue-on-error: true
      - name: Upload Output
        uses: actions/upload-artifact@v4
        with:
          name: snyk-output
          path: snyk.json

  container_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Container
        run: docker build . --file Dockerfile -t vuln_app

      # Container Scan
      - name: Run Trivy vulnerablility scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'vuln_app'
          format: json
          output: trivy.json
        continue-on-error: true

      - name: Upload Output
        uses: actions/upload-artifact@v4
        with:
          name: trivy-output
          path: trivy.json

  secret_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@v3.81.9
        with:
          extra_args: --json

  evaluate_results:
    needs: [build-test, sast, dast1, dast2, secret_scan, dependency_scan]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Download reports
      - name: Download Bearer Report
        uses: actions/download-artifact@v4
        with:
          name: bearer-output
          path: .github/workflows/results/
      - name: Download Nuclei Report
        uses: actions/download-artifact@v4
        with:
          name: nuclei-output
          path: .github/workflows/results/
      - name: Download ZAP Report
        uses: actions/download-artifact@v3
        with:
          name: zap_scan
          path: .github/workflows/results/
      - name: Download Snyk Report
        uses: actions/download-artifact@v4
        with:
          name: snyk-output
          path: .github/workflows/results/
      - name: Download Trivy Report
        uses: actions/download-artifact@v4
        with:
          name: trivy-output
          path: .github/workflows/results/


      - run: python3 .github/workflows/result_validation.py

      - name: Comment PR positive
        if: ${{ env.SCAN_VALID == 'True' && github.event_name == 'pull_request'}}
        uses: peter-evans/create-or-update-comment@v4.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: "There are no critical or high severity findings found by any tool."


      - name: Comment PR negative
        if: ${{ env.SCAN_VALID == 'False' && github.event_name == 'pull_request'}}
        uses: peter-evans/create-or-update-comment@v4.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: "The security scan was not valid. ${{ env.SCAN_RESULT }}"

      - name: Fail workflow if scan is invalid
        if: ${{ env.SCAN_VALID == 'False' && github.event_name == 'pull_request'}}
        run: |
          echo "The security scan was not valid. Failing the workflow."
          exit 1
